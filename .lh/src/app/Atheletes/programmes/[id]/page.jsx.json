{
    "sourceFile": "src/app/atheletes/programmes/[id]/page.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1747549057357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747549073081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \n import programsData from '../../../../lib/programmes.json';\n \n \n-import ProgramDetailClient from './../../../../components/Atheletes/PerformanceLabDetailClient';\n+import ProgramDetailClient from './../../../../components/Atheletes/ProgramDetailClient';\n \n // Generate static parameters\n export function generateStaticParams() {\n   return programsData.consultations.map((p) => ({ id: p.id }));\n"
                },
                {
                    "date": 1747549169603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+'use client';\n+\n+import React from 'react';\n+\n+import programsData from '../../../../lib/programmes.json';\n+\n+\n+import ProgramDetailClient from './../../../../components/Atheletes/ProgramDetailClient';\n+\n+\n+\n+// Generate static parameters\n+export function generateStaticParams() {\n+  return programsData.consultations.map((p) => ({ id: p.id }));\n+}\n+\n+// Generate metadata for SEO\n+export async function generateMetadata({ params }) {\n+  const program = programsData.consultations.find((p) => p.id === params.id);\n+\n+  if (!program) {\n+    return {\n+      title: 'Program Not Found',\n+      description: 'The requested program could not be found.',\n+    };\n+  }\n+\n+  return {\n+    title: `${program.title} - Programmes`,\n+    description: program.description,\n+  };\n+}\n+\n+export const dynamicParams = false;\n+\n+export default function ProgramDetailPage({ params }) {\n+  const program = programsData.consultations.find((p) => p.id === params.id);\n+  if (!program) return notFound();\n+\n+  return <ProgramDetailClient program={program} />;\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747549260606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+\n+\n+import React from 'react';\n+\n+import programsData from '../../../../lib/programmes.json';\n+\n+\n+import ProgramDetailClient from './../../../../components/Atheletes/ProgramDetailClient';\n+\n+\n+\n+// Generate static parameters\n+export function generateStaticParams() {\n+  return programsData.consultations.map((p) => ({ id: p.id }));\n+}\n+\n+// Generate metadata for SEO\n+export async function generateMetadata({ params }) {\n+  const program = programsData.consultations.find((p) => p.id === params.id);\n+\n+  if (!program) {\n+    return {\n+      title: 'Program Not Found',\n+      description: 'The requested program could not be found.',\n+    };\n+  }\n+\n+  return {\n+    title: `${program.title} - Programmes`,\n+    description: program.description,\n+  };\n+}\n+\n+export const dynamicParams = false;\n+\n+export default function ProgramDetailPage({ params }) {\n+  const program = programsData.consultations.find((p) => p.id === params.id);\n+  if (!program) return notFound();\n+\n+  return <ProgramDetailClient program={program} />;\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1747549057357,
            "name": "Commit-0",
            "content": "'use client';\n\nimport React from 'react';\n\nimport programsData from '../../../../lib/programmes.json';\n\n\nimport ProgramDetailClient from './../../../../components/Atheletes/PerformanceLabDetailClient';\n\n// Generate static parameters\nexport function generateStaticParams() {\n  return programsData.consultations.map((p) => ({ id: p.id }));\n}\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }) {\n  const program = programsData.consultations.find((p) => p.id === params.id);\n\n  if (!program) {\n    return {\n      title: 'Program Not Found',\n      description: 'The requested program could not be found.',\n    };\n  }\n\n  return {\n    title: `${program.title} - Programmes`,\n    description: program.description,\n  };\n}\n\nexport const dynamicParams = false;\n\nexport default function ProgramDetailPage({ params }) {\n  const program = programsData.consultations.find((p) => p.id === params.id);\n  if (!program) return notFound();\n\n  return <ProgramDetailClient program={program} />;\n}"
        }
    ]
}