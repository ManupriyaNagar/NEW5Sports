{
    "sourceFile": "src/components/global/Background/WavyBackground.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1747084413080,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747084494633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-/* src/components/WavyBackground.jsx */\n+// src/components/WavyBackground.jsx\n 'use client';\n import React from 'react';\n \n const WavyBackground = ({\n@@ -7,9 +7,9 @@\n   lines = 30,\n   maxAmplitude = 20,\n   gradientFrom = '#334d6e',\n   gradientTo = '#7fb1d2',\n-  borderRadius = 32,   \n+  borderRadius = 32,\n }) => {\n   const yPositions = Array.from({ length: lines }, (_, i) =>\n     (i * height) / (lines - 1)\n   );\n@@ -19,9 +19,9 @@\n       className=\"absolute inset-0 w-full overflow-hidden px-14\"\n       style={{\n         height,\n         borderRadius: `${borderRadius}px`,\n-        zIndex: -1\n+        zIndex: -1,\n       }}\n     >\n       <svg\n         className=\"w-full h-full\"\n"
                },
                {
                    "date": 1747085341970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,40 @@\n-// src/components/WavyBackground.jsx\n 'use client';\n import React from 'react';\n \n-const WavyBackground = ({\n+interface WavyBackgroundProps {\n+  /** Total height of the SVG container in pixels */\n+  height?: number;\n+  /** How many horizontal wave lines to draw */\n+  lines?: number;\n+  /** Maximum vertical displacement of the waves */\n+  maxAmplitude?: number;\n+  /** Start color of the vertical gradient */\n+  gradientFrom?: string;\n+  /** End color of the vertical gradient */\n+  gradientTo?: string;\n+  /** Tailwind class for rounding the container */\n+  borderRadiusClass?: string;\n+}\n+\n+const WavyBackground: React.FC<WavyBackgroundProps> = ({\n   height = 400,\n   lines = 30,\n   maxAmplitude = 20,\n   gradientFrom = '#334d6e',\n   gradientTo = '#7fb1d2',\n-  borderRadius = 32,\n+  borderRadiusClass = 'rounded-3xl',\n }) => {\n-  const yPositions = Array.from({ length: lines }, (_, i) =>\n-    (i * height) / (lines - 1)\n+  // Precompute the y coordinate of each line\n+  const yPositions = React.useMemo(\n+    () => Array.from({ length: lines }, (_, i) => (i * height) / (lines - 1)),\n+    [height, lines]\n   );\n \n   return (\n     <div\n-      className=\"absolute inset-0 w-full overflow-hidden px-14\"\n-      style={{\n-        height,\n-        borderRadius: `${borderRadius}px`,\n-        zIndex: -1,\n-      }}\n+      className={`absolute inset-0 w-full overflow-hidden px-14 ${borderRadiusClass}`}\n+      style={{ height, zIndex: -1 }}\n     >\n       <svg\n         className=\"w-full h-full\"\n         viewBox={`0 0 100 ${height}`}\n@@ -34,20 +46,28 @@\n             <stop offset=\"0%\" stopColor={gradientFrom} />\n             <stop offset=\"100%\" stopColor={gradientTo} />\n           </linearGradient>\n         </defs>\n+\n+        {/* Background rectangle filled with the gradient */}\n         <rect width=\"100%\" height=\"100%\" fill=\"url(#bgGrad)\" />\n-        <g stroke=\"black\" strokeWidth=\"0.7\" fill=\"none\">\n+\n+        {/* Wavy lines */}\n+        <g stroke=\"black\" strokeWidth={0.7} fill=\"none\">\n           {yPositions.map((y, idx) => {\n             const norm = y / height;\n             const amplitude = Math.sin(Math.PI * norm) * maxAmplitude;\n-            const d = Array.from({ length: 6 }, (_, seg) => {\n-              const x0 = (seg * 100) / 5;\n-              const x1 = ((seg + 1) * 100) / 5;\n+\n+            // Build a 6-segment wave path for this line\n+            const segments = 6;\n+            const d = Array.from({ length: segments }, (_, seg) => {\n+              const x0 = (seg * 100) / segments;\n+              const x1 = ((seg + 1) * 100) / segments;\n               const cpX = (x0 + x1) / 2;\n               const cpY = y + (seg % 2 === 0 ? amplitude : -amplitude);\n               return `C ${cpX} ${cpY} ${cpX} ${cpY} ${x1} ${y}`;\n             }).join(' ');\n+\n             return <path key={idx} d={`M0 ${y} ${d}`} />;\n           })}\n         </g>\n       </svg>\n"
                },
                {
                    "date": 1747085404401,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,76 +1,49 @@\n+// src/components/WavyBackground.jsx\n 'use client';\n import React from 'react';\n \n-interface WavyBackgroundProps {\n-  /** Total height of the SVG container in pixels */\n-  height?: number;\n-  /** How many horizontal wave lines to draw */\n-  lines?: number;\n-  /** Maximum vertical displacement of the waves */\n-  maxAmplitude?: number;\n-  /** Start color of the vertical gradient */\n-  gradientFrom?: string;\n-  /** End color of the vertical gradient */\n-  gradientTo?: string;\n-  /** Tailwind class for rounding the container */\n-  borderRadiusClass?: string;\n-}\n-\n-const WavyBackground: React.FC<WavyBackgroundProps> = ({\n+const WavyBackground = ({\n   height = 400,\n   lines = 30,\n   maxAmplitude = 20,\n-  gradientFrom = '#334d6e',\n-  gradientTo = '#7fb1d2',\n-  borderRadiusClass = 'rounded-3xl',\n+  className = '',\n }) => {\n-  // Precompute the y coordinate of each line\n-  const yPositions = React.useMemo(\n-    () => Array.from({ length: lines }, (_, i) => (i * height) / (lines - 1)),\n-    [height, lines]\n+  // compute equally-spaced Y positions\n+  const yPositions = Array.from({ length: lines }, (_, i) =>\n+    (i * height) / (lines - 1)\n   );\n \n   return (\n     <div\n-      className={`absolute inset-0 w-full overflow-hidden px-14 ${borderRadiusClass}`}\n-      style={{ height, zIndex: -1 }}\n+      className={`\n+        relative w-full overflow-hidden\n+        bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n+        ${className}\n+      `}\n+      style={{ height }}\n     >\n       <svg\n-        className=\"w-full h-full\"\n+        className=\"absolute inset-0 w-full h-full\"\n         viewBox={`0 0 100 ${height}`}\n         preserveAspectRatio=\"none\"\n         xmlns=\"http://www.w3.org/2000/svg\"\n       >\n-        <defs>\n-          <linearGradient id=\"bgGrad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n-            <stop offset=\"0%\" stopColor={gradientFrom} />\n-            <stop offset=\"100%\" stopColor={gradientTo} />\n-          </linearGradient>\n-        </defs>\n-\n-        {/* Background rectangle filled with the gradient */}\n-        <rect width=\"100%\" height=\"100%\" fill=\"url(#bgGrad)\" />\n-\n-        {/* Wavy lines */}\n-        <g stroke=\"black\" strokeWidth={0.7} fill=\"none\">\n-          {yPositions.map((y, idx) => {\n-            const norm = y / height;\n-            const amplitude = Math.sin(Math.PI * norm) * maxAmplitude;\n-\n-            // Build a 6-segment wave path for this line\n-            const segments = 6;\n-            const d = Array.from({ length: segments }, (_, seg) => {\n-              const x0 = (seg * 100) / segments;\n-              const x1 = ((seg + 1) * 100) / segments;\n-              const cpX = (x0 + x1) / 2;\n-              const cpY = y + (seg % 2 === 0 ? amplitude : -amplitude);\n-              return `C ${cpX} ${cpY} ${cpX} ${cpY} ${x1} ${y}`;\n-            }).join(' ');\n-\n-            return <path key={idx} d={`M0 ${y} ${d}`} />;\n-          })}\n-        </g>\n+        {yPositions.map((y, idx) => {\n+          // amplitude ramp-up towards bottom if you like, or keep constant\n+          const amp = maxAmplitude * (idx / (lines - 1));\n+          // a simple quadratic Bézier from left to right\n+          const d = `M0,${y} Q50,${y + amp} 100,${y}`;\n+          return (\n+            <path\n+              key={idx}\n+              d={d}\n+              stroke=\"rgba(0,0,0,0.6)\"\n+              strokeWidth=\"0.5\"\n+              fill=\"none\"\n+            />\n+          );\n+        })}\n       </svg>\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1747085508487,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,18 +1,17 @@\n-// src/components/WavyBackground.jsx\n-'use client';\n-import React from 'react';\n+// src/components/global/Background/WavyBackground.jsx\n+'use client'\n+import React from 'react'\n \n const WavyBackground = ({\n   height = 400,\n   lines = 30,\n   maxAmplitude = 20,\n   className = '',\n }) => {\n-  // compute equally-spaced Y positions\n   const yPositions = Array.from({ length: lines }, (_, i) =>\n     (i * height) / (lines - 1)\n-  );\n+  )\n \n   return (\n     <div\n       className={`\n@@ -28,24 +27,22 @@\n         preserveAspectRatio=\"none\"\n         xmlns=\"http://www.w3.org/2000/svg\"\n       >\n         {yPositions.map((y, idx) => {\n-          // amplitude ramp-up towards bottom if you like, or keep constant\n-          const amp = maxAmplitude * (idx / (lines - 1));\n-          // a simple quadratic Bézier from left to right\n-          const d = `M0,${y} Q50,${y + amp} 100,${y}`;\n+          const amp = maxAmplitude * (idx / (lines - 1))\n+          const d = `M0,${y} Q50,${y + amp} 100,${y}`\n           return (\n             <path\n               key={idx}\n               d={d}\n               stroke=\"rgba(0,0,0,0.6)\"\n               strokeWidth=\"0.5\"\n               fill=\"none\"\n             />\n-          );\n+          )\n         })}\n       </svg>\n     </div>\n-  );\n-};\n+  )\n+}\n \n-export default WavyBackground;\n+export default WavyBackground\n"
                },
                {
                    "date": 1747085565078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative w-full overflow-hidden\n+        relative w-full overflow-hidden rounded-3xl\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085571063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative w-full overflow-hidden rounded-3xl\n+        relative w-full overflow-hidden rounded-3xl px-12\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085582153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative w-full overflow-hidden rounded-3xl px-12\n+        relative w-full overflow-hidden rounded-3xl px-20\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085605451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative w-full overflow-hidden rounded-3xl px-20\n+        relative  overflow-hidden rounded-3xl px-20\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085653334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl px-20\n+        relative px-20 overflow-hidden rounded-3xl px-20\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085663010,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative px-20 overflow-hidden rounded-3xl px-20\n+        relative  overflow-hidden rounded-3xl w-20\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085671418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl w-20\n+        relative  overflow-hidden rounded-3xl px-20 mx-auto\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085680137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl px-20 mx-auto\n+        relative  overflow-hidden rounded-3xl container mx-auto\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085692295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl container mx-auto\n+        relative  overflow-hidden rounded-3xl max-w-7xl mx-auto\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085714531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl max-w-7xl mx-auto\n+        relative  overflow-hidden rounded-3xl w-[1200px] mx-auto\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747085724846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl w-[1200px] mx-auto\n+        relative  overflow-hidden rounded-3xl w-[1400px] mx-auto\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n"
                },
                {
                    "date": 1747088136413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,55 @@\n // src/components/global/Background/WavyBackground.jsx\n-'use client'\n-import React from 'react'\n+'use client';\n+import React from 'react';\n \n const WavyBackground = ({\n   height = 400,\n   lines = 30,\n   maxAmplitude = 20,\n   className = '',\n+  children,\n }) => {\n   const yPositions = Array.from({ length: lines }, (_, i) =>\n     (i * height) / (lines - 1)\n-  )\n+  );\n \n   return (\n     <div\n       className={`\n-        relative  overflow-hidden rounded-3xl w-[1400px] mx-auto\n+        relative overflow-hidden rounded-3xl\n         bg-gradient-to-b from-[#334d6e] to-[#7fb1d2]\n         ${className}\n       `}\n       style={{ height }}\n     >\n+      {/* SVG waves */}\n       <svg\n         className=\"absolute inset-0 w-full h-full\"\n         viewBox={`0 0 100 ${height}`}\n         preserveAspectRatio=\"none\"\n         xmlns=\"http://www.w3.org/2000/svg\"\n       >\n         {yPositions.map((y, idx) => {\n-          const amp = maxAmplitude * (idx / (lines - 1))\n-          const d = `M0,${y} Q50,${y + amp} 100,${y}`\n+          const amp = maxAmplitude * (idx / (lines - 1));\n+          const d = `M0,${y} Q50,${y + amp} 100,${y}`;\n           return (\n             <path\n               key={idx}\n               d={d}\n               stroke=\"rgba(0,0,0,0.6)\"\n               strokeWidth=\"0.5\"\n               fill=\"none\"\n             />\n-          )\n+          );\n         })}\n       </svg>\n+\n+      {/* Content wrapper */}\n+      <div className=\"relative z-10 flex flex-col justify-between h-full\">\n+        {children}\n+      </div>\n     </div>\n-  )\n-}\n+  );\n+};\n \n-export default WavyBackground\n+export default WavyBackground;\n"
                }
            ],
            "date": 1747084413080,
            "name": "Commit-0",
            "content": "/* src/components/WavyBackground.jsx */\n'use client';\nimport React from 'react';\n\nconst WavyBackground = ({\n  height = 400,\n  lines = 30,\n  maxAmplitude = 20,\n  gradientFrom = '#334d6e',\n  gradientTo = '#7fb1d2',\n  borderRadius = 32,   \n}) => {\n  const yPositions = Array.from({ length: lines }, (_, i) =>\n    (i * height) / (lines - 1)\n  );\n\n  return (\n    <div\n      className=\"absolute inset-0 w-full overflow-hidden px-14\"\n      style={{\n        height,\n        borderRadius: `${borderRadius}px`,\n        zIndex: -1\n      }}\n    >\n      <svg\n        className=\"w-full h-full\"\n        viewBox={`0 0 100 ${height}`}\n        preserveAspectRatio=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <defs>\n          <linearGradient id=\"bgGrad\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={gradientFrom} />\n            <stop offset=\"100%\" stopColor={gradientTo} />\n          </linearGradient>\n        </defs>\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#bgGrad)\" />\n        <g stroke=\"black\" strokeWidth=\"0.7\" fill=\"none\">\n          {yPositions.map((y, idx) => {\n            const norm = y / height;\n            const amplitude = Math.sin(Math.PI * norm) * maxAmplitude;\n            const d = Array.from({ length: 6 }, (_, seg) => {\n              const x0 = (seg * 100) / 5;\n              const x1 = ((seg + 1) * 100) / 5;\n              const cpX = (x0 + x1) / 2;\n              const cpY = y + (seg % 2 === 0 ? amplitude : -amplitude);\n              return `C ${cpX} ${cpY} ${cpX} ${cpY} ${x1} ${y}`;\n            }).join(' ');\n            return <path key={idx} d={`M0 ${y} ${d}`} />;\n          })}\n        </g>\n      </svg>\n    </div>\n  );\n};\n\nexport default WavyBackground;\n"
        }
    ]
}